@mixin flex_center() {
  align-items: center;
  display: flex;
  justify-content: center;
}

@mixin font-family($ff: $font-family) {
  font-family: $ff;
}

@mixin size_even($size) {
  height: $size;
  width: $size;
}

@mixin circle_border_shadow($color, $shadow) {
  // https://stackoverflow.com/questions/23490320/gap-between-border-and-image-when-border-radius-is-added
  background-color: $color;
  border: 5px solid $color;
  box-shadow: 0 12px 42px 1px $shadow;
  // box-shadow: 0 7px 10px -3px rgba($color: $color, $alpha: .5);
}

@mixin box_shadow($shadow: 0 12px 42px 1px rgba(0,0,0, .15)) {
  box-shadow: $shadow;
}

#header {
  box-shadow: 0px 9px 24px rgba(0,0,0,0.15);
  color: $color-black;
  z-index: 20;
}

.header {
  &__logo {
    @include font-family();
    color: $color-black;
    font-weight: 700;
    font-size: 24px;
  }
}

.navbar {
  &__span {
    @include font-family();
    color: $color-black;
    font-weight: 400;
    font-size: 16px;
  }
}

.navbar-toggler {
  .close {
    display: none;
  }

  .collapsed {
    transition: all .1s ease-in-out;
  
    .hamburger {
      display: inline;
    }
  }
  
  &:not(.collapsed) {
    transition: all .1s ease-in-out;
  
    .hamburger {
      display: none;
    }
  
    .close {
      display:inline;
    }
  }
}

#topButton {
  right: 30px; /* Place the button 30px from the right */
  bottom: 25px; /* Place the button at the bottom of the page */
  display: inline-block;
  font-size: 18px; /* Increase font size */
  opacity: 0;
  position: fixed; /* Fixed/sticky position */
  visibility: hidden;
  z-index: 1000; /* Make sure it does not overlap */

  &.active {
    cursor: pointer; /* Add a mouse pointer on hover */
    opacity: .7;
    transition: all .25s ease-in-out;
    visibility: visible;
  }
}

.cta-button {
  @include font-family();
  background-color: $color-cta-button-bg;
  border: none;
  border-radius: 5px;
  color: $color-white;
  font-size: 14px;
  font-weight: 700;
  padding: 16px 46px;

  &:hover {
    background-color: $color-cta-button-bg-hover;
    color: #e7e7e7;
    transition: background-color .1s ease-in-out;
  }
  &:active {
    background-color: $color-cta-button-bg;
    box-shadow: 0 0 0 .2rem rgba($color: $color-cta-button-bg, $alpha: .25);
    &:focus {
      background-color: $color-cta-button-bg;
      box-shadow: 0 0 0 .2rem rgba($color: $color-cta-button-bg, $alpha: .25);
    }
  }
  &:focus {
    background-color: $color-cta-button-bg;
    box-shadow: 0 0 0 .2rem rgba($color: $color-cta-button-bg, $alpha: .25);
  }
}
// FOOTER
.footer {
  background-color: $color-footer-bg;
  padding: 200px 0 120px;

  &__container {
    text-align: center;
  }

  &__header {
    color: $color-white;
    margin-bottom: 40px;
    // margin-bottom: $spacer * 3;
  }
  
  &__cta {
    box-shadow: 0px 12px 42px 1px rgba(0, 0, 0, 0.15);
    background-color: $color-cta-button-bg;
    text-align: center;
  }
}


#loader-container{
  background: white;
  width: 100vw;
  height: 100vh;
  position: fixed;
  z-index: 100;
  transition: all .3s ease-in-out;
  &.close-loader{
    height: 0;
    .preloader{
      opacity: 0;
      
    }
  }
  // top: 0;
  // left: 0;
  @for $i from 1 through 6 {
    @keyframes preload-show-#{$i}{
      from{
        transform: rotateZ(60* $i + deg) rotateY(-90deg) rotateX(0deg);
        border-left-color: #9c2f2f;
      }
    }
    @keyframes preload-hide-#{$i}{
      to{
        transform: rotateZ(60* $i + deg) rotateY(-90deg) rotateX(0deg);
        border-left-color: #9c2f2f;
      }
    }
  
    @keyframes preload-cycle-#{$i}{
      
      $startIndex: $i*5;
      $reverseIndex: (80 - $i*5);
  
      #{$startIndex * 1%}{
        transform: rotateZ(60* $i + deg) rotateY(90deg) rotateX(0deg);
        border-left-color: #9c2f2f;
      }
      #{$startIndex + 5%},
      #{$reverseIndex * 1%}{
        transform: rotateZ(60* $i + deg) rotateY(0) rotateX(0deg);
        border-left-color: #f7484e;
      }
  
      #{$reverseIndex + 5%},
      100%{
        transform: rotateZ(60* $i + deg) rotateY(90deg) rotateX(0deg);
        border-left-color: #9c2f2f;
      }
    }
  }
  
  @keyframes preload-flip{
    0%{
      transform: rotateY(0deg) rotateZ(-60deg);
    }
    100%{
      transform: rotateY(360deg) rotateZ(-60deg);
    }
  }
  
  
  
  .preloader{
    transition: opacity .3s ease-in-out;
    position: absolute;
    top: 50%;
    left: 50%;
    font-size: 20px;
    display: block;
    width: 3.75em;
    height: 4.25em;
    margin-left: -1.875em;
    margin-top: -2.125em;
    transform-origin: center center;
    transform: rotateY(180deg) rotateZ(-60deg);
  
    .slice{
      border-top: 1.125em solid transparent;
      border-right: none;
      border-bottom: 1em solid transparent;
      border-left: 1.875em solid #f7484e;
      position: absolute;
      top: 0px;
      left: 50%;
      transform-origin: left bottom;
      border-radius: 3px 3px 0 0;
    }
  
    @for $i from 1 through 6 {
      .slice:nth-child(#{$i}) { 
        transform: rotateZ(60* $i + deg) rotateY(0deg) rotateX(0);
        animation: .15s linear .9 - $i*.08s preload-hide-#{$i} both 1;
      }
    }
  
  
    &.loading{
      animation: 2s preload-flip steps(2) infinite both;
      @for $i from 1 through 6 {
        .slice:nth-child(#{$i}) { 
          transform: rotateZ(60* $i + deg) rotateY(90deg) rotateX(0);
          animation: 2s preload-cycle-#{$i} linear infinite both;
        }
      }
    }
  
  }
}